Работаем в директории helm
Создание namespace
======================================================================================================================
kubectl create namespace eventbus
======================================================================================================================


Установка metallb
======================================================================================================================
Ставим metallb
minikube addons enable metallb
Проверка
kubectl get pods -n metallb-system
Результат
NAME                          READY   STATUS    RESTARTS   AGE
controller-66bc445b99-kls54   1/1     Running   0          6m12s
speaker-plzcg                 1/1     Running   0          6m12s

Конфигурируем плагин metallb
minikube ip
Результат
192.168.49.2

minikube addons configure metallb
-- Enter Load Balancer Start IP: 192.168.49.10
-- Enter Load Balancer End IP: 192.168.49.50
    ▪ Using image metallb/speaker:v0.9.6
    ▪ Using image metallb/controller:v0.9.6
✅  metallb was successfully configured


Результат - HTTP трафик может поступать в кластер minikube через LoadBalancer services

======================================================================================================================

Развертывание ядро Istio (istiod)
======================================================================================================================
curl -L https://istio.io/downloadIstio | sh -
cd istio-1.11.3
export PATH=$PWD/bin:$PATH
istioctl x precheck
istioctl install --set profile=minimal -y --set meshConfig.accessLogFile=/dev/stdout
istioctl operator init --watchedNamespaces=eventbus
cd ..
kubectl label namespace eventbus istio-injection=enabled

======================================================================================================================


======================================================================================================================

Установка кластера rabbitmq
======================================================================================================================
1. Установить cluster operator
kubectl apply -f "https://github.com/rabbitmq/cluster-operator/releases/latest/download/cluster-operator.yml"

2. Установить topology operator
2.1 Установка cert-manager
kubectl apply -f https://github.com/jetstack/cert-manager/releases/download/v1.3.1/cert-manager.yaml
2.2 Установка оператора
kubectl apply -f https://github.com/rabbitmq/messaging-topology-operator/releases/latest/download/messaging-topology-operator-with-certmanager.yaml

Результат - развернуты CRD RabbitMQ

3. Развертывание кластера RabbitMQ
3.1 Создание кластера и очередей
kubectl apply -f rabbitmq/rabbitmqCluster.yaml

Проверка старта кластера
kubectl get pods --namespace eventbus
Результат
NAME                         READY   STATUS    RESTARTS   AGE
rabbitmq-cluster1-server-0   1/1     Running   0          3m10s

kubectl apply -f rabbitmq/rabbitmqQueue.yaml
kubectl apply -f rabbitmq/rabbitmqUsers.yaml

Результат
Создан кластер rabbitmq, пользователи и очереди

Проверка
kubectl port-forward service/rabbitmq-cluster1 15673:15672 --namespace eventbus
затем в браузере http://localhost:15673
Появится страница консоли администрирования rabbitmq. Зайти под admin/admin.
Убедиться, что созданы пользователи admin и http-proxy (при этом будет еще один пользователь с автогенеренным именем)
Убедиться, что созданы очереди rq1 и rq2

======================================================================================================================

7. Получение доступа к админстративной консоли RabbitMQ
В отдельной консоли запустить
kubectl port-forward service/eventbus-ingressgateway-service 15673:80 --namespace eventbus

Результат
В браузере зайти на http://localhost:15673/
Будет отображена стартовая страница консоли RabbitMQ

Погасить через Ctrl+C kubectl port-forward
======================================================================================================================


Развертывание istio ingress и egress в пространство eventbus

!!!kubectl apply -f ./istio-gateway/istioGateway.yaml --namespace eventbus

!!!kubectl get svc --namespace eventbus


